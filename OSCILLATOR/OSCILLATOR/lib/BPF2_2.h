//*****************************************************************************
//*****************************************************************************
//  FILENAME: BPF2_2.h
//   Version: 6.00, Updated on 2015/3/4 at 22:23:20
//  Generated by PSoC Designer 5.4.3191
//
//  DESCRIPTION: C declarations for the BPF2 User Module.
//-----------------------------------------------------------------------------
//      Copyright (c) Cypress Semiconductor 2015. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef BPF2_2_INCLUDE
#define BPF2_2_INCLUDE

#include <m8c.h>

#pragma fastcall16 BPF2_2_Start
#pragma fastcall16 BPF2_2_SetPower
#pragma fastcall16 BPF2_2_Stop
#pragma fastcall16 BPF2_2_SetC1
#pragma fastcall16 BPF2_2_SetC2
#pragma fastcall16 BPF2_2_SetC3
#pragma fastcall16 BPF2_2_SetC4
#pragma fastcall16 BPF2_2_SetCA
#pragma fastcall16 BPF2_2_SetCB
#pragma fastcall16 BPF2_2_SetPolarity


//-------------------------------------------------
// Prototypes of the BPF2_2 API.
//-------------------------------------------------

extern void BPF2_2_Start(BYTE bPowerSetting);
extern void BPF2_2_SetPower(BYTE bPowerSetting);
extern void BPF2_2_Stop(void);
extern void BPF2_2_SetC1(BYTE bCapValue);
extern void BPF2_2_SetC2(BYTE bCapValue);
extern void BPF2_2_SetC3(BYTE bCapValue);
extern void BPF2_2_SetC4(BYTE bCapValue);
extern void BPF2_2_SetCA(BYTE bCapValue);
extern void BPF2_2_SetCB(BYTE bCapValue);
extern void BPF2_2_SetPolarity(BYTE bPolaritySetting);


//-------------------------------------------------
// Defines for BPF2_2 API's.
//-------------------------------------------------

#define BPF2_2_OFF                               (0x00)
#define BPF2_2_LOWPOWER                          (0x01)
#define BPF2_2_MEDPOWER                          (0x02)
#define BPF2_2_HIGHPOWER                         (0x03)

#define BPF2_2_FEEDBACK_16                       (0x00)
#define BPF2_2_FEEDBACK_32                       (0x01)

#define BPF2_2_POLARITY_INVERTING                (0x00)
#define BPF2_2_POLARITY_NON_INVERTING            (0x01)

#define BPF2_2_AMD_MSK         (0x7)
#define BPF2_2_AMD_VAL         (0x0)

//-------------------------------------------------
// Hardware Register Definitions
//-------------------------------------------------

#pragma ioport  BPF2_2_FLIN_CR0:    0x094                       //Analog SCA control register 0
BYTE            BPF2_2_FLIN_CR0;
#pragma ioport  BPF2_2_FLIN_CR1:    0x095                       //Analog SCA control register 1
BYTE            BPF2_2_FLIN_CR1;
#pragma ioport  BPF2_2_FLIN_CR2:    0x096                       //Analog SCA control register 2
BYTE            BPF2_2_FLIN_CR2;
#pragma ioport  BPF2_2_FLIN_CR3:    0x097                       //Analog SCA control register 3
BYTE            BPF2_2_FLIN_CR3;
#pragma ioport  BPF2_2_FLFB_CR0:    0x090                       //Analog SCB control register 0
BYTE            BPF2_2_FLFB_CR0;
#pragma ioport  BPF2_2_FLFB_CR1:    0x091                       //Analog SCB control register 1
BYTE            BPF2_2_FLFB_CR1;
#pragma ioport  BPF2_2_FLFB_CR2:    0x092                       //Analog SCB control register 2
BYTE            BPF2_2_FLFB_CR2;
#pragma ioport  BPF2_2_FLFB_CR3:    0x093                       //Analog SCB control register 3
BYTE            BPF2_2_FLFB_CR3;

//  BPF2_2 Cap naming convention per Gregorian and Temes, p293

#pragma ioport  BPF2_2_FILT_C1_REG: 0x094
BYTE            BPF2_2_FILT_C1_REG;
#pragma ioport  BPF2_2_FILT_C2_REG: 0x095
BYTE            BPF2_2_FILT_C2_REG;
#pragma ioport  BPF2_2_FILT_C3_REG: 0x090
BYTE            BPF2_2_FILT_C3_REG;
#pragma ioport  BPF2_2_FILT_C4_REG: 0x092
BYTE            BPF2_2_FILT_C4_REG;
#pragma ioport  BPF2_2_FILT_CA_REG: 0x094
BYTE            BPF2_2_FILT_CA_REG;
#pragma ioport  BPF2_2_FILT_CB_REG: 0x090
BYTE            BPF2_2_FILT_CB_REG;

#pragma ioport  BPF2_2_AMD_REG:     0x166 //Analog Modulator control Register
BYTE            BPF2_2_AMD_REG;

#endif
// end of file BPF2_2.h
